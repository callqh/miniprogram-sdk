
    const data = {"/Users/lqh/work/tracker/example/wx/app.js":{"api":{"getStorageSync":{"type":1},"setStorageSync":{"type":1},"login":{"type":1}}},"/Users/lqh/work/tracker/example/wx/app.json":true,"/Users/lqh/work/tracker/example/wx/app.wxss":true,"/Users/lqh/work/tracker/example/wx/project.config.json":true,"/Users/lqh/work/tracker/example/wx/sensorsdata.min.js":{"api":{"setStorageSync":{"type":1},"getStorageSync":{"type":1},"setNavigationBarTitle":{"type":1},"request":{"type":2,"desc":"发起 HTTPS 网络请求","returnValue":{"RequestTask":{"type":2,"desc":"请求任务对象","params":{"onHeadersReceived":{"type":0,"desc":"监听 HTTP Response Header 事件"},"offHeadersReceived":{"type":0,"desc":"取消监听 HTTP Response Header 事件"}}}}},"getAccountInfoSync":{"type":1},"getSystemInfo":{"type":1},"getNetworkType":{"type":1},"getSetting":{"type":1},"getLocation":{"type":1},"login":{"type":1},"getStorage":{"type":1},"onAppShow":{"type":1},"getLaunchOptionsSync":{"type":1},"onAppHide":{"type":1}}},"/Users/lqh/work/tracker/example/wx/sitemap.json":true,"/Users/lqh/work/tracker/example/wx/utils/tracker.wx.js":{"api":{"getStorageSync":{"type":1},"setStorageSync":{"type":1},"removeStorageSync":{"type":1},"getAccountInfoSync":{"type":1}}},"/Users/lqh/work/tracker/example/wx/pages/logs/logs.js":{"api":{"getStorageSync":{"type":1}}},"/Users/lqh/work/tracker/example/wx/pages/logs/logs.json":true,"/Users/lqh/work/tracker/example/wx/pages/logs/logs.wxml":{"component":{"view":{"type":1},"block":{"type":1},"text":{"type":1}}},"/Users/lqh/work/tracker/example/wx/pages/logs/logs.wxss":true,"/Users/lqh/work/tracker/example/wx/pages/index/index.js":{"api":{"canIUse":{"type":1},"navigateTo":{"type":1},"getUserProfile":{"type":1}}},"/Users/lqh/work/tracker/example/wx/pages/index/index.json":true,"/Users/lqh/work/tracker/example/wx/pages/index/index.wxml":{"component":{"view":{"type":1},"button":{"type":1},"block":{"type":1},"open-data":{"type":0,"props":{"type":{"type":0},"open-gid":{"type":0},"lang":{"type":0},"default-text":{"type":0},"default-avatar":{"type":0},"binderror":{"type":0}}},"image":{"type":1},"text":{"type":1}}},"/Users/lqh/work/tracker/example/wx/pages/index/index.wxss":true};
    const brief = {
      projectName: "Weixin",
      path: "/Users/lqh/work/tracker/example/jd",
      transType: "mp",
      transWay: "wx-jd",
    };
    const countInfoOfAllFile = {"jsFileNum":5,"wxmlFileNum":2,"jsonFileNum":5,"wxssFileNum":3,"totalFileNum":0,"api":{"info":{"getStorageSync":{"type":1},"setStorageSync":{"type":1},"login":{"type":1},"setNavigationBarTitle":{"type":1},"request":{"type":2},"getAccountInfoSync":{"type":1},"getSystemInfo":{"type":1},"getNetworkType":{"type":1},"getSetting":{"type":1},"getLocation":{"type":1},"getStorage":{"type":1},"onAppShow":{"type":1},"getLaunchOptionsSync":{"type":1},"onAppHide":{"type":1},"removeStorageSync":{"type":1},"canIUse":{"type":1},"navigateTo":{"type":1},"getUserProfile":{"type":1}},"supportedNum":17,"unSupportedNum":0,"partialSupportedNum":1},"component":{"info":{"view":{"type":1},"block":{"type":1},"text":{"type":1},"button":{"type":1},"open-data":{"type":0},"image":{"type":1}},"supportedNum":5,"unSupportedNum":1,"partialSupportedNum":0}};
    window.data = data;
    window.brief = brief;
    window.countInfoOfAllFile = countInfoOfAllFile;
    window.transferRules={"supportSubpackages":false,"supportPlugins":false,"targetName":"京东小程序","type":"wx-jd","sourcefileName":{"js":"js","json":"json","css":"wxss","html":"wxml","scope":"wxs"},"file":[{"from":"wxss","to":"jxss"},{"from":"wxml","to":"jxml"},{"from":"wxs","to":"jds"}],"html":{"replaceAttribs":[{"from":"wx:if","to":"jd:if"},{"from":"wx:elif","to":"jd:elif"},{"from":"wx:else","to":"jd:else"},{"from":"wx:for","to":"jd:for"},{"from":"wx:for-index","to":"jd:for-index"},{"from":"wx:for-item","to":"jd:for-item"},{"from":"wx:for-items","to":"jd:for-items"},{"from":"wx:key","to":"jd:key"}],"componentImplement":[]},"js":{"replaceObjectCaller":[{"from":"wx","to":"jd"}]},"json":[],"css":[],"apiDesc":{"getRealtimeLogManager":{"type":0,"desc":"获取实时日志管理器对象","returnValue":{"RealtimeLogManager":{"type":0,"desc":"实时日志管理器对象"}}},"getLogManager":{"type":0,"desc":"获取日志管理器对象","params":{"level":{"type":0,"desc":"取值为0/1，取值为0表示是否会把 App、Page 的生命周期函数和 wx 命名空间下的函数调用写入日志，取值为1则不会。默认值是 0"}},"returnValue":{"LogManager":{"type":0,"desc":"日志管理器对象"}}},"offAudioInterruptionBegin":{"type":0,"desc":"取消监听音频因为受到系统占用而被中断开始事件","params":{"callback":{"type":0,"isFunc":true,"desc":"音频因为受到系统占用而被中断开始事件的回调函数"}}},"offAudioInterruptionEnd":{"type":0,"desc":"取消监听音频中断结束事件","params":{"callback":{"type":0,"isFunc":true,"desc":"音频中断结束事件的回调函数"}}},"offError":{"type":0,"desc":"取消监听小程序错误事件","params":{"callback":{"type":0,"isFunc":true,"desc":"小程序错误事件的回调函数"}}},"offUnhandledRejection":{"type":0,"desc":"取消监听未处理的 Promise 拒绝事件","params":{"callback":{"type":0,"isFunc":true,"desc":"未处理的 Promise 拒绝事件的回调函数"}}},"onAudioInterruptionBegin":{"type":0,"desc":"监听音频因为受到系统占用而被中断开始事件。以下场景会触发此事件：闹钟、电话、FaceTime 通话、微信语音聊天、微信视频聊天。此事件触发后，小程序内所有音频会暂停。","params":{"callback":{"type":0,"isFunc":true,"desc":"音频因为受到系统占用而被中断开始事件的回调函数"}}},"onAudioInterruptionEnd":{"type":0,"desc":"监听音频中断结束事件。在收到 onAudioInterruptionBegin 事件之后，小程序内所有音频会暂停，收到此事件之后才可再次播放成功","params":{"callback":{"type":0,"isFunc":true,"desc":"音频中断结束事件的回调函数"}}},"onError":{"type":0,"desc":"监听小程序错误事件。如脚本错误或 API 调用报错等。","params":{"callback":{"type":0,"isFunc":true,"desc":"小程序错误事件的回调函数","params":{"error":{"type":0,"desc":"错误信息，包含堆栈"}}}}},"onUnhandledRejection":{"type":0,"desc":"监听未处理的 Promise 拒绝事件","params":{"callback":{"type":0,"isFunc":true,"desc":"未处理的 Promise 拒绝事件的回调函数","params":{"reason":{"type":0,"desc":"拒绝原因，一般是一个 Error 对象"},"promise":{"type":0,"desc":"被拒绝的 Promise 对象"}}}}},"updateWeChatApp":{"type":0,"desc":"更新客户端版本。当判断用户小程序所在客户端版本过低时，可使用该接口跳转到更新微信页面","params":{"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）"}},"returnValue":{}},"getUpdateManager":{"type":0,"desc":"获取全局唯一的版本更新管理器，用于管理小程序更新","params":{},"returnValue":{"UpdateManager":{"type":0,"desc":"更新管理器对象"}}},"onBLEPeripheralConnectionStateChanged":{"type":0,"desc":"监听当前外围设备被连接或断开连接事件","params":{"callback":{"type":0,"isFunc":true,"desc":"当前外围设备被连接或断开连接事件的回调函数","params":{"deviceId":{"type":0,"desc":"连接状态变化的设备 id"},"serverId":{"type":0,"desc":"server 的 uuid"},"connected":{"type":0,"desc":"连接目前状态"}}}}},"offBLEPeripheralConnectionStateChanged":{"type":0,"desc":"取消监听当前外围设备被连接或断开连接事件","params":{"callback":{"type":0,"isFunc":true,"desc":"当前外围设备被连接或断开连接事件的回调函数"}}},"createBLEPeripheralServer":{"type":0,"desc":"建立本地作为外围设备的服务端，可创建多个","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true,"returnValue":{"BLEPeripheralServer.addService":{"type":0,"desc":"添加服务"},"BLEPeripheralServer.close":{"type":0,"desc":"关闭当前服务端"},"BLEPeripheralServer.removeService":{"type":0,"desc":"移除服务"},"BLEPeripheralServer.startAdvertising":{"type":0,"desc":"开始广播本地创建的外围设备"},"BLEPeripheralServer.stopAdvertising":{"type":0,"desc":"停止广播"},"BLEPeripheralServer.writeCharacteristicValue":{"type":0,"desc":"往指定特征值写入数据，并通知已连接的主机，从机的特征值已发生变化，该接口会处理是走回包还是走订阅"},"BLEPeripheralServer.onCharacteristicWriteRequest":{"type":0,"desc":"监听已连接的设备请求写当前外围设备的特征值事件。收到该消息后需要立刻调用 writeCharacteristicValue 写回数据，否则主机不会收到响应"},"BLEPeripheralServer.offCharacteristicWriteRequest":{"type":0,"desc":"取消监听已连接的设备请求写当前外围设备的特征值事件"},"BLEPeripheralServer.onCharacteristicReadRequest":{"type":0,"desc":"监听已连接的设备请求读当前外围设备的特征值事件。收到该消息后需要立刻调用 writeCharacteristicValue 写回数据，否则主机不会收到响应"},"BLEPeripheralServer.offCharacteristicReadRequest":{"type":0,"desc":"取消监听已连接的设备请求读当前外围设备的特征值事件"},"BLEPeripheralServer.onCharacteristicSubscribed":{"type":0,"desc":"监听特征值订阅事件，仅 iOS 支持"},"BLEPeripheralServer.offCharacteristicSubscribed":{"type":0,"desc":"取消监听特征值订阅事件"},"BLEPeripheralServer.onCharacteristicUnsubscribed":{"type":0,"desc":"监听取消特征值订阅事件，仅 iOS 支持"},"BLEPeripheralServer.offCharacteristicUnsubscribed":{"type":0,"desc":"取消监听取消特征值订阅事件"}}},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"stopBeaconDiscovery":{"type":0,"desc":"停止搜索附近的 iBeacon 设备","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"startBeaconDiscovery":{"type":0,"desc":"开始搜索附近的 iBeacon 设备","params":{"uuids":{"type":0,"desc":"iBeacon 设备广播的 uuid 列表"},"ignoreBluetoothAvailable":{"type":0,"desc":"是否校验蓝牙开关，仅在 iOS 下有效"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"onBeaconUpdate":{"type":0,"desc":"监听 iBeacon 设备更新事件，仅能注册一个监听","params":{"callback":{"type":0,"isFunc":true,"desc":"iBeacon 设备更新事件的回调函数","params":{"beacons":{"type":0,"desc":"当前搜寻到的所有 iBeacon 设备列表"}}}}},"onBeaconServiceChange":{"type":0,"desc":"监听 iBeacon 服务状态变化事件，仅能注册一个监听","params":{"callback":{"type":0,"isFunc":true,"desc":"iBeacon 服务状态变化事件的回调函数","params":{"available":{"type":0,"desc":"服务目前是否可用"},"discovering":{"type":0,"desc":"目前是否处于搜索状态"}}}}},"offBeaconUpdate":{"type":0,"desc":"取消监听 iBeacon 设备更新事件","params":{"callback":{"type":0,"isFunc":true,"desc":"iBeacon 设备更新事件的回调函数"}}},"offBeaconServiceChange":{"type":0,"desc":"取消监听 iBeacon 服务状态变化事件","params":{"callback":{"type":0,"isFunc":true,"desc":"iBeacon 服务状态变化事件的回调函数"}}},"getBeacons":{"type":0,"desc":"获取所有已搜索到的 iBeacon 设备","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"stopHCE":{"type":0,"desc":"关闭 NFC 模块。仅在安卓系统下有效","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"startHCE":{"type":0,"desc":"初始化 NFC 模块","params":{"aid_list":{"type":0,"desc":"需要注册到系统的 AID 列表"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"sendHCEMessage":{"type":0,"desc":"发送 NFC 消息。仅在安卓系统下有效","params":{"data":{"type":0,"desc":"二进制数据"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"onHCEMessage":{"type":0,"desc":"监听接收 NFC 设备消息事件，仅能注册一个监听","params":{"callback":{"type":0,"isFunc":true,"desc":"接收 NFC 设备消息事件的回调函数","params":{"messageType":{"type":0,"desc":"消息类型"},"data":{"type":0,"desc":"messageType=1 时 ,客户端接收到 NFC 设备的指令"},"reason":{"type":0,"desc":"messageType=2 时，原因"}}}}},"offHCEMessage":{"type":0,"desc":"接收 NFC 设备消息事件，取消事件监听","params":{"callback":{"type":0,"isFunc":true,"desc":"接收 NFC 设备消息事件的回调函数"}}},"getHCEState":{"type":0,"desc":"判断当前设备是否支持 HCE 能力","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"checkIsOpenAccessibility":{"type":0,"desc":"检测是否开启视觉无障碍功能","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"createMapContext":{"type":2,"desc":"创建 map 上下文 MapContext 对象","params":{},"returnValue":{"MapContext.addCustomLayer":{"type":0,"desc":"添加个性化图层","params":{"layerId":{"type":0,"desc":"个性化图层id"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"MapContext.addGroundOverlay":{"type":0,"desc":"创建自定义图片图层，图片会随着地图缩放而缩放。","params":{"id":{"type":0,"desc":"图片图层 id"},"src":{"type":0,"desc":"图片路径，支持网络图片、临时路径、代码包路径"},"bounds":{"type":0,"desc":"图片覆盖的经纬度范围"},"visible":{"type":0,"desc":"是否可见"},"zIndex":{"type":0,"desc":"图层绘制顺序"},"opacity":{"type":0,"desc":"图层透明度"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"MapContext.addMarkers":{"type":0,"desc":"添加 marker","params":{"markers":{"type":0,"desc":"同传入 map 组件的 marker 属性"},"clear":{"type":0,"desc":"是否先清空地图上所有 marker"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"MapContext.fromScreenLocation":{"type":0,"desc":"获取屏幕上的点对应的经纬度，坐标原点为地图左上角","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"MapContext.initMarkerCluster":{"type":0,"desc":"初始化点聚合的配置，未调用时采用默认配置","params":{"enableDefaultStyle":{"type":0,"desc":"启用默认的聚合样式"},"zoomOnClick":{"type":0,"desc":"点击已经聚合的标记点时是否实现聚合分离"},"gridSize":{"type":0,"desc":"聚合算法的可聚合距离，即距离小于该值的点会聚合至一起，以像素为单位"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"MapContext.moveAlong":{"type":0,"desc":"沿指定路径移动 marker，用于轨迹回放等场景。动画完成时触发回调事件，若动画进行中，对同一 marker 再次调用 moveAlong 方法，前一次的动画将被打断","params":{"markerId":{"type":0,"desc":"指定 marker"},"path":{"type":0,"desc":"移动路径的坐标串，坐标点格式 {longitude, latitude}"},"autoRotate":{"type":0,"desc":"根据路径方向自动改变 marker 的旋转角度"},"duration":{"type":0,"desc":"平滑移动的时间"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"MapContext.on":{"type":0,"desc":"监听地图事件"},"MapContext.openMapApp":{"type":0,"desc":"拉起地图APP选择导航"},"MapContext.removeCustomLayer":{"type":0,"desc":"移除个性化图层"},"MapContext.removeGroundOverlay":{"type":0,"desc":"移除自定义图片图层"},"MapContext.removeMarkers":{"type":0,"desc":"移除 marker"},"MapContext.setCenterOffset":{"type":0,"desc":"设置地图中心点偏移，向后向下为增长，屏幕比例范围(0.25~0.75)，默认偏移为[0.5, 0.5]"},"MapContext.toScreenLocation":{"type":0,"desc":"获取经纬度对应的屏幕坐标，坐标原点为地图左上角"},"MapContext.updateGroundOverlay":{"type":0,"desc":"更新自定义图片图层"},"MapContext":{"type":0,"desc":"监听地图事件"}}},"chooseMessageFile":{"type":0,"desc":"从客户端会话选择文件","params":{"count":{"type":0,"desc":"最多可以选择的文件个数，可以 0～100"},"type":{"type":0,"desc":"所选的文件的类型"},"extension":{"type":0,"desc":"根据文件拓展名过滤，仅 type==file 时有效。每一项都不能是空字符串。默认不过滤"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"openVideoEditor":{"type":0,"desc":"打开视频编辑器","params":{"filePath":{"type":0,"desc":"视频源的路径，只支持本地路径"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"getVideoInfo":{"type":1,"desc":"获取视频详细信息","params":{"src":{"type":0,"desc":"视频文件路径，可以是临时文件路径也可以是永久文件路径"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"compressVideo":{"type":1,"desc":"压缩视频接口。开发者可指定压缩质量 quality 进行压缩。当需要更精细的控制时，可指定 bitrate、fps、和 resolution，当 quality 传入时，这三个参数将被忽略。原视频的相关信息可通过 getVideoInfo 获取","params":{"src":{"type":0,"desc":"视频文件路径，可以是临时文件路径也可以是永久文件路径"},"quality":{"type":0,"desc":"压缩质量"},"bitrate":{"type":0,"desc":"码率，单位 kbps"},"fps":{"type":0,"desc":"帧率"},"resolution":{"type":0,"desc":"相对于原视频的分辨率比例，取值范围(0, 1]"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"createVideoContext":{"type":2,"desc":"创建 video 上下文 VideoContext 对象","params":{"id":{"type":0,"desc":"video 组件的 id"},"this":{"type":0,"desc":"在自定义组件下，当前组件实例的this，以操作组件内 video 组件"}},"returnValue":{"VideoContext.exitPictureInPicture":{"type":0,"desc":"退出小窗，该方法可在任意页面调用"},"VideoContext.hideStatusBar":{"type":0,"desc":"隐藏状态栏，仅在iOS全屏下有效"},"VideoContext.sendDanmu":{"type":0,"desc":"发送弹幕"}}},"setInnerAudioOption":{"type":0,"desc":"设置 InnerAudioContext 的播放选项。设置之后对当前小程序全局生效","params":{"mixWithOther":{"type":0,"desc":"是否与其他音频混播，设置为 true 之后，不会终止其他应用或微信内的音乐"},"obeyMuteSwitch":{"type":0,"desc":"（仅在 iOS 生效）是否遵循静音开关，设置为 false 之后，即使是在静音模式下，也能播放声音"},"speakerOn":{"type":0,"desc":"true 代表用扬声器播放，false 代表听筒播放，默认值为 true"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"getAvailableAudioSources":{"type":0,"desc":"获取当前支持的音频输入源","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"createMediaAudioPlayer":{"type":0,"desc":"创建媒体音频播放器对象 MediaAudioPlayer 对象，可用于播放视频解码器 VideoDecoder 输出的音频","returnValue":{"MediaAudioPlayer.start":{"type":0,"desc":"启动播放器"},"MediaAudioPlayer.addAudioSource":{"type":0,"desc":"添加音频源"},"MediaAudioPlayer.removeAudioSource":{"type":0,"desc":"移除音频源"},"MediaAudioPlayer.stop":{"type":0,"desc":"停止播放器"},"MediaAudioPlayer.destroy":{"type":0,"desc":"销毁播放器"}}},"createLivePlayerContext":{"type":2,"desc":"创建 live-player 上下文 LivePlayerContext 对象","params":{"id":{"type":1,"desc":"live-player 组件的 id"},"this":{"type":1,"desc":"在自定义组件下，当前组件实例的this，以操作组件内 live-player 组件"}},"returnValue":{"LivePlayerContext.exitFullScreen":{"type":1,"desc":"退出全屏"},"LivePlayerContext.exitPictureInPicture":{"type":0,"desc":"退出小窗，该方法可在任意页面调用"},"LivePlayerContext.mute":{"type":1,"desc":"静音"},"LivePlayerContext.pause":{"type":1,"desc":"暂停"},"LivePlayerContext.play":{"type":1,"desc":"播放"},"LivePlayerContext.requestFullScreen":{"type":1,"desc":"进入全屏"},"LivePlayerContext.resume":{"type":1,"desc":"恢复"},"LivePlayerContext.snapshot":{"type":0,"desc":"截图"},"LivePlayerContext.stop":{"type":1,"desc":"停止"}}},"createLivePusherContext":{"type":0,"desc":"创建 live-pusher 上下文 LivePusherContext 对象","returnValue":{"LivePusherContext.pause":{"type":0,"desc":"暂停推流"},"LivePusherContext.pauseBGM":{"type":0,"desc":"暂停背景音"},"LivePusherContext.playBGM":{"type":0,"desc":"播放背景音"},"LivePusherContext.resume":{"type":0,"desc":"恢复推流"},"LivePusherContext.resumeBGM":{"type":0,"desc":"恢复背景音"},"LivePusherContext.setBGMVolume":{"type":0,"desc":"设置背景音音量"},"LivePusherContext.setMICVolume":{"type":0,"desc":"设置麦克风音量"},"LivePusherContext.snapshot":{"type":0,"desc":"快照"},"LivePusherContext.start":{"type":0,"desc":"开始推流，同时开启摄像头预览"},"LivePusherContext.startPreview":{"type":0,"desc":"开启摄像头预览"},"LivePusherContext.stop":{"type":0,"desc":"停止推流，同时停止摄像头预览"},"LivePusherContext.stopBGM":{"type":0,"desc":"停止背景音"},"LivePusherContext.stopPreview":{"type":0,"desc":"关闭摄像头预览"},"LivePusherContext.switchCamera":{"type":0,"desc":"切换前后摄像头"},"LivePusherContext.toggleTorch":{"type":0,"desc":"切换手电筒"}}},"createMediaContainer":{"type":0,"desc":"创建音视频处理容器，最终可将容器中的轨道合成一个视频","returnValue":{"MediaContainer.extractDataSource":{"type":0,"desc":"将传入的视频源分离轨道。不会自动将轨道添加到待合成的容器里"},"MediaContainer.addTrack":{"type":0,"desc":"将音频或视频轨道添加到容器"},"MediaContainer.removeTrack":{"type":0,"desc":"将音频或视频轨道从容器中移除"},"MediaContainer.export":{"type":0,"desc":"将容器内的轨道合并并导出视频文件"},"MediaContainer.destroy":{"type":0,"desc":"将容器销毁，释放资源"}}},"updateVoIPChatMuteConfig":{"type":0,"desc":"更新实时语音静音设置","params":{"muteConfig":{"type":0,"desc":"静音设置"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"subscribeVoIPVideoMembers":{"type":0,"desc":"订阅视频画面成员。对于视频房间，当成员超过两人时需进行订阅，否则只能看到最先加入房间的两人画面","params":{"openIdList":{"type":0,"desc":"订阅的成员列表"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"onVoIPVideoMembersChanged":{"type":0,"desc":"监听实时语音通话成员视频状态变化事件","params":{"callback":{"type":0,"isFunc":true,"desc":"实时语音通话成员视频状态变化事件的回调函数","params":{"openIdList":{"type":0,"desc":"开启视频的成员名单"},"errCode":{"type":0,"desc":"错误码"},"errMsg":{"type":0,"desc":"调用结果"}}}}},"onVoIPChatSpeakersChanged":{"type":0,"desc":"监听实时语音通话成员通话状态变化事件。有成员开始/停止说话时触发回调","params":{"callback":{"type":0,"isFunc":true,"desc":"实时语音通话成员通话状态变化事件的回调函数","params":{"openIdList":{"type":0,"desc":"还在实时语音通话中的成员 openId 名单"},"errCode":{"type":0,"desc":"错误码"},"errMsg":{"type":0,"desc":"调用结果（错误原因）"}}}}},"onVoIPChatMembersChanged":{"type":0,"desc":"监听实时语音通话成员在线状态变化事件。有成员加入/退出通话时触发回调","params":{"callback":{"type":0,"isFunc":true,"desc":"实时语音通话成员在线状态变化事件的回调函数","params":{"openIdList":{"type":0,"desc":"还在实时语音通话中的成员 openId 名单"},"errCode":{"type":0,"desc":"错误码"},"errMsg":{"type":0,"desc":"调用结果"}}}}},"onVoIPChatInterrupted":{"type":0,"desc":"监听被动断开实时语音通话事件。包括小游戏切入后端时断开","params":{"callback":{"type":0,"isFunc":true,"desc":"被动断开实时语音通话事件的回调函数","params":{"errCode":{"type":0,"desc":"错误码"},"errMsg":{"type":0,"desc":"调用结果（错误原因）"}}}}},"offVoIPVideoMembersChanged":{"type":0,"desc":"取消监听实时语音通话成员视频状态变化事件","params":{"callback":{"type":0,"isFunc":true,"desc":"被动断开实时语音通话事件的回调函数"}}},"offVoIPChatMembersChanged":{"type":0,"desc":"取消监听实时语音通话成员在线状态变化事件","params":{"callback":{"type":0,"isFunc":true,"desc":"实时语音通话成员在线状态变化事件的回调函数"}}},"offVoIPChatInterrupted":{"type":0,"desc":"取消监听被动断开实时语音通话事件","params":{"callback":{"type":0,"isFunc":true,"desc":"被动断开实时语音通话事件的回调函数"}}},"joinVoIPChat":{"type":0,"desc":"加入 (创建) 实时语音通话，更多信息可见 实时语音指南。调用前需要用户授权 scope.record，若房间类型为视频房间需要用户授权 scope.camera","params":{"roomType":{"type":0,"desc":"房间类型"},"signature":{"type":0,"desc":"签名，用于验证小游戏的身份"},"nonceStr":{"type":0,"desc":"验证所需的随机字符串"},"timeStamp":{"type":0,"desc":"验证所需的时间戳"},"groupId":{"type":0,"desc":"小游戏内此房间/群聊的 ID。同一时刻传入相同 groupId 的用户会进入到同个实时语音房间"},"muteConfig":{"type":0,"desc":"静音设置"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"exitVoIPChat":{"type":0,"desc":"退出（销毁）实时语音通话","params":{"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"createVideoDecoder":{"type":0,"desc":"创建视频解码器，可逐帧获取解码后的数据","returnValue":{"VideoDecoder.start":{"type":0,"desc":"开始解码"},"VideoDecoder.seek":{"type":0,"desc":"跳到某个时间点解码"},"VideoDecoder.stop":{"type":0,"desc":"停止解码"},"VideoDecoder.remove":{"type":0,"desc":"移除解码器"},"VideoDecoder.getFrameData":{"type":0,"desc":"获取下一帧的解码数据"},"VideoDecoder.on":{"type":0,"desc":"注册监听录制事件的回调函数。当对应事件触发时，回调函数会被执行"},"VideoDecoder.off":{"type":0,"desc":"取消监听录制事件。当对应事件触发时，该回调函数不再执行"}}},"offLocalServiceDiscoveryStop":{"type":0,"desc":"取消监听 mDNS 服务停止搜索的事件","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务停止搜索的事件的回调函数"}}},"offLocalServiceFound":{"type":0,"desc":"取消监听 mDNS 服务发现的事件","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务发现的事件的回调函数"}}},"offLocalServiceLost":{"type":0,"desc":"取消监听 mDNS 服务离开的事件","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务离开的事件的回调函数"}}},"offLocalServiceResolveFail":{"type":0,"desc":"取消监听 mDNS 服务解析失败的事件","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务解析失败的事件的回调函数"}}},"onLocalServiceDiscoveryStop":{"type":0,"desc":"监听 mDNS 服务停止搜索的事件","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务停止搜索的事件的回调函数"}}},"onLocalServiceLost":{"type":0,"desc":"mDNS 服务离开的事件的回调函数","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务发现的事件的回调函数"}}},"onLocalServiceResolveFail":{"type":0,"desc":"监听 mDNS 服务解析失败的事件","params":{"callback":{"type":0,"isFunc":true,"desc":"mDNS 服务解析失败的事件的回调函数"}}},"startLocalServiceDiscovery":{"type":0,"desc":"开始搜索局域网下的 mDNS 服务","params":{"serviceType":{"type":0,"desc":"要搜索的服务类型"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"stopLocalServiceDiscovery":{"type":0,"desc":"停止搜索 mDNS 服务","params":{"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"uploadFile":{"type":2,"desc":"将本地资源上传到服务器","returnValue":{"UploadTask":{"type":2,"desc":"一个可以监听下载进度变化事件和取消下载的对象","params":{"offProgressUpdate":{"type":0,"desc":"取消监听下载进度变化事件"},"onHeadersReceived":{"type":0,"desc":"监听 HTTP Response Header 事件。会比请求完成事件更早"},"offHeadersReceived":{"type":0,"desc":"取消监听 HTTP Response Header 事件"}}}}},"downloadFile":{"type":2,"desc":"下载文件资源到本地","returnValue":{"DownloadTask":{"type":2,"desc":"一个可以监听下载进度变化事件和取消下载的对象","params":{"offProgressUpdate":{"type":0,"desc":"取消监听下载进度变化事件"},"onHeadersReceived":{"type":0,"desc":"监听 HTTP Response Header 事件。会比请求完成事件更早"},"offHeadersReceived":{"type":0,"desc":"取消监听 HTTP Response Header 事件"}}}}},"request":{"type":2,"desc":"发起 HTTPS 网络请求","returnValue":{"RequestTask":{"type":2,"desc":"请求任务对象","params":{"onHeadersReceived":{"type":0,"desc":"监听 HTTP Response Header 事件"},"offHeadersReceived":{"type":0,"desc":"取消监听 HTTP Response Header 事件"}}}}},"updateShareMenu":{"type":0,"desc":"更新转发属性","params":{"withShareTicket":{"type":0,"desc":"是否使用带 shareTicket 的转发详情"},"isUpdatableMessage":{"type":0,"desc":"是否是动态消息，详见动态消息"},"activityId":{"type":0,"desc":"动态消息的 activityId。通过 updatableMessage.createActivityId 接口获取"},"toDoActivityId":{"type":0,"desc":"群待办消息的id，通过toDoActivityId可以把多个群待办消息聚合为同一个"},"templateInfo":{"type":0,"desc":"动态消息的模板信息"},"isPrivateMessage":{"type":0,"desc":"是否是私密消息"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"showShareMenu":{"type":0,"desc":"显示当前页面的转发按钮","params":{"withShareTicket":{"type":0,"desc":"是否使用带 shareTicket 的转发详情"},"menus":{"type":0,"desc":"本接口为 Beta 版本，暂只在 Android 平台支持。需要显示的转发按钮名称列表，默认[\"shareAppMessage\"]。按钮名称合法值包含 \"shareAppMessage\"、\"shareTimeline\" 两种"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"hideShareMenu":{"type":0,"desc":"隐藏当前页面的转发按钮","params":{"menus":{"type":0,"desc":"本接口为 Beta 版本，暂只在 Android 平台支持。需要显示的转发按钮名称列表，默认[\"shareAppMessage\"]。按钮名称合法值包含 \"shareAppMessage\"、\"shareTimeline\" 两种"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"getShareInfo":{"type":0,"desc":"获取转发详细信息","params":{"shareTicket":{"type":0,"desc":"shareTicket"},"timeout":{"type":0,"desc":"超时时间，单位 ms"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"authPrivateMessage":{"type":0,"desc":"验证私密消息","params":{"shareTicket":{"type":0,"desc":"shareTicket"},"success":{"type":0,"desc":"接口调用成功的回调函数","isFunc":true},"fail":{"type":0,"desc":"接口调用失败的回调函数","isFunc":true},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）","isFunc":true}}},"getBackgroundFetchData":{"type":0,"desc":"拉取 backgroundFetch 客户端缓存数据","doc":{"wx":"https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.getBackgroundFetchData.html","jd":""},"params":{"fetchType":{"type":0,"desc":"取值为 periodic"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"getBackgroundFetchToken":{"type":0,"desc":"获取设置过的自定义登录态。若无，则返回 fail","doc":{"wx":"https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.getBackgroundFetchToken.html","jd":""},"params":{"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"onBackgroundFetchData":{"type":0,"desc":"监听收到 backgroundFetch 数据时的回调","doc":{"wx":"https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.onBackgroundFetchData.html","jd":""},"params":{"callback":{"type":0,"isFunc":true,"desc":"的回调函数"}}},"setBackgroundFetchToken":{"type":0,"desc":"设置自定义登录态，在周期性拉取数据时带上，便于第三方服务器验证请求合法性","doc":{"wx":"https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.setBackgroundFetchToken.html","jd":""},"params":{"token":{"type":0,"desc":"自定义的登录态"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"getSelectedTextRange":{"type":0,"desc":"在input、textarea等focus之后，获取输入框的光标位置。注意：只有在focus的时候调用此接口才有效","params":{"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"offWindowResize":{"type":0,"desc":"取消监听窗口尺寸变化事件","params":{"callback":{"type":0,"isFunc":true,"desc":"窗口尺寸变化事件的回调函数"}}},"onWindowResize":{"type":0,"desc":"监听窗口尺寸变化事件","params":{"callback":{"type":0,"isFunc":true,"desc":"窗口尺寸变化事件的回调函数","params":{"windowWidth":{"type":0,"desc":"变化后的窗口宽度，单位 px"},"windowHeight":{"type":0,"desc":"变化后的窗口高度，单位 px"}}}}},"setWindowSize":{"type":0,"desc":"设置窗口大小，该接口仅适用于 PC 平台","params":{"width":{"type":0,"desc":"窗口宽度，以像素为单位"},"height":{"type":0,"desc":"窗口高度，以像素为单位"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"setTopBarText":{"type":0,"desc":"动态设置置顶栏文字内容。只有当前小程序被置顶时能生效，如果当前小程序没有被置顶，也能调用成功，但是不会立即生效，只有在用户将这个小程序置顶后才换上设置的文字内容","params":{"text":{"type":0,"desc":"置顶栏文字"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}}},"loadFontFace":{"type":0,"desc":"动态加载网络字体，文件地址需为下载类型","params":{"global":{"type":0,"desc":"是否全局生效"},"family":{"type":0,"desc":"定义的字体名称"},"source":{"type":0,"desc":"字体资源的地址。建议格式为 TTF 和 WOFF，WOFF2 在低版本的iOS上会不兼容。"},"desc":{"type":0,"desc":"可选的字体描述符"},"scopes":{"type":0,"desc":"字体作用范围，可选值为 webview / native，默认 webview，设置 native 可在 Canvas 2D 下使用"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行"}},"returnValue":{}},"enableAlertBeforeUnload":{"type":0,"desc":"开启小程序页面返回询问对话框","params":{"message":{"type":0,"desc":"询问对话框内容"},"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）"}}},"disableAlertBeforeUnload":{"type":0,"desc":"关闭小程序页面返回询问对话框","params":{"success":{"type":0,"desc":"接口调用成功的回调函数"},"fail":{"type":0,"desc":"接口调用失败的回调函数"},"complete":{"type":0,"desc":"接口调用结束的回调函数（调用成功、失败都会执行）"}}},"createRewardedVideoAd":{"type":0,"desc":"创建激励视频广告组件","params":{"adUnitId":{"type":0,"desc":"广告单元 id"},"multiton":{"type":0,"desc":"是否启用多例模式，默认为false"}},"returnValue":{"RewardedVideoAd.destroy":{"type":0,"desc":"销毁激励视频广告实例"},"RewardedVideoAd.load":{"type":0,"desc":"加载激励视频广告"},"RewardedVideoAd.offClose":{"type":0,"desc":"取消监听用户点击 关闭广告 按钮的事件"},"RewardedVideoAd.offError":{"type":0,"desc":"取消监听激励视频错误事件"},"RewardedVideoAd.offLoad":{"type":0,"desc":"取消监听激励视频广告加载事件"},"RewardedVideoAd.onClose":{"type":0,"desc":"监听用户点击 关闭广告 按钮的事件"},"RewardedVideoAd.onError":{"type":0,"desc":"监听激励视频错误事件"},"RewardedVideoAd.onLoad":{"type":0,"desc":"监听激励视频广告加载事件"},"RewardedVideoAd.show":{"type":0,"desc":"显示激励视频广告"}}},"createInterstitialAd":{"type":0,"desc":"创建插屏广告组件","params":{"adUnitId":{"type":0,"desc":"广告单元 id"}},"returnValue":{"InterstitialAd.destroy":{"type":0,"desc":"销毁插屏广告实例"},"InterstitialAd.load":{"type":0,"desc":"加载插屏广告"},"InterstitialAd.offClose":{"type":0,"desc":"取消监听插屏广告关闭事件"},"InterstitialAd.offError":{"type":0,"desc":"取消监听插屏错误事件"},"InterstitialAd.offLoad":{"type":0,"desc":"取消监听插屏广告加载事件"},"InterstitialAd.onClose":{"type":0,"desc":"监听插屏广告关闭事件"},"InterstitialAd.onError":{"type":0,"desc":"监听插屏错误事件"},"InterstitialAd.onLoad":{"type":0,"desc":"监听插屏广告加载事件"},"InterstitialAd.show":{"type":0,"desc":"显示插屏广告"}}}},"componentDesc":{"match-media":{"type":0,"props":{"min-width":{"type":0},"max-width":{"type":0},"width":{"type":0},"min-height":{"type":0},"max-height":{"type":0},"height":{"type":0},"orientation":{"type":0}}},"editor":{"type":0,"props":{"read-only":{"type":0},"placeholder":{"type":0},"show-img-size":{"type":0},"show-img-toolbar":{"type":0},"show-img-resize":{"type":0},"bindready":{"type":0},"bindfocus":{"type":0},"bindblur":{"type":0},"bindinput":{"type":0},"bindstatuschange":{"type":0}}},"functional-page-navigator":{"type":0,"props":{"version":{"type":0},"name":{"type":0},"args":{"type":0},"bindsuccess":{"type":0},"bindfail":{"type":0},"bindcancel":{"type":0}}},"live-pusher":{"type":0,"props":{"url":{"type":0},"mode":{"type":0},"autopush":{"type":0},"muted":{"type":0},"enable-camera":{"type":0},"auto-focus":{"type":0},"orientation":{"type":0},"beauty":{"type":0},"whiteness":{"type":0},"aspect":{"type":0},"min-bitrate":{"type":0},"max-bitrate":{"type":0},"audio-quality":{"type":0},"waiting-image":{"type":0},"waiting-image-hash":{"type":0},"zoom":{"type":0},"device-position":{"type":0},"background-mute":{"type":0},"mirror":{"type":0},"local-mirror":{"type":0},"remote-mirror":{"type":0},"audio-reverb-type":{"type":0},"enable-mic":{"type":0},"enable-agc":{"type":0},"enable-ans":{"type":0},"audio-volume-type":{"type":0},"video-width":{"type":0},"video-height":{"type":0},"beauty-style":{"type":0},"filter":{"type":0},"bindstatechange":{"type":0},"bindnetstatus":{"type":0},"binderror":{"type":0},"bindbgmstart":{"type":0},"bindbgmprogress":{"type":0},"bindbgmcomplete":{"type":0},"bindaudiovolumenotify":{"type":0}}},"aria-component":{"type":0,"props":{"aria-hidden":{"type":0},"aria-role":{"type":0},"aria-label":{"type":0},"aria-checked":{"type":0},"aria-disabled":{"type":0},"aria-describedby":{"type":0},"aria-expanded":{"type":0},"aria-haspopup":{"type":0},"aria-selected":{"type":0},"aria-required":{"type":0},"aria-orientation":{"type":0},"aria-valuemin":{"type":0},"aria-valuemax":{"type":0},"aria-valuenow":{"type":0},"aria-readonly":{"type":0},"aria-multiselectable":{"type":0},"aria-controls":{"type":0},"aria-tabindex":{"type":0},"aria-labelledby":{"type":0}}},"open-data":{"type":0,"props":{"type":{"type":0},"open-gid":{"type":0},"lang":{"type":0},"default-text":{"type":0},"default-avatar":{"type":0},"binderror":{"type":0}}},"page-meta":{"type":0,"props":{"background-text-style":{"type":0},"background-color":{"type":0},"background-color-top":{"type":0},"background-color-bottom":{"type":0},"root-background-color":{"type":0},"scroll-top":{"type":0},"scroll-duration":{"type":0},"page-style":{"type":0},"body-font-size":{"type":0},"root-font-size":{"type":0},"page-orientation":{"type":0},"bindresize":{"type":0},"bindscroll":{"type":0},"bindscrolldone":{"type":0}}}}};
  